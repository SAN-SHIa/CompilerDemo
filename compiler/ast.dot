digraph AST {
  node [shape=box, fontname="Arial", fontsize=10];
  edge [fontname="Arial", fontsize=9];
  rankdir=TB;
  node0 [label="Function Definition: int main()"];
  node1 [label="Compound Statement"];
  node2 [label="Compound Statement"];
  node3 [label="Compound Statement"];
  node4 [label="Compound Statement"];
  node5 [label="Compound Statement"];
  node6 [label="Compound Statement"];
  node7 [label="Compound Statement"];
  node8 [label="Variable Declaration with Init: x (int)"];
  node9 [label="Integer: 10"];
  node8 -> node9;
  node7 -> node8;
  node10 [label="Variable Declaration with Init: y (float)"];
  node11 [label="Float: 5.50"];
  node10 -> node11;
  node7 -> node10;
  node6 -> node7;
  node12 [label="Variable Declaration: result (float)"];
  node6 -> node12;
  node5 -> node6;
  node13 [label="Assignment: result"];
  node14 [label="Binary Op: +"];
  node15 [label="Binary Op: *"];
  node16 [label="Variable: x"];
  node15 -> node16;
  node17 [label="Variable: y"];
  node15 -> node17;
  node14 -> node15;
  node18 [label="Binary Op: -"];
  node19 [label="Variable: x"];
  node18 -> node19;
  node20 [label="Variable: y"];
  node18 -> node20;
  node14 -> node18;
  node13 -> node14;
  node5 -> node13;
  node4 -> node5;
  node21 [label="If Statement"];
  node22 [label="Condition"];
  node21 -> node22;
  node23 [label="Binary Op: >"];
  node24 [label="Variable: result"];
  node23 -> node24;
  node25 [label="Float: 40.00"];
  node23 -> node25;
  node22 -> node23;
  node26 [label="Then"];
  node21 -> node26;
  node27 [label="Function Call: printf"];
  node27 -> node28;
  node28 [label="Variable: \"Initial result is greater than 40.0\""];
  node26 -> node27;
  node29 [label="Else"];
  node21 -> node29;
  node30 [label="Compound Statement"];
  node31 [label="Assignment: result"];
  node32 [label="Binary Op: *"];
  node33 [label="Variable: result"];
  node32 -> node33;
  node34 [label="Float: 2.00"];
  node32 -> node34;
  node31 -> node32;
  node30 -> node31;
  node35 [label="Function Call: printf"];
  node35 -> node36;
  node36 [label="Variable: \"Doubled result\""];
  node30 -> node35;
  node29 -> node30;
  node4 -> node21;
  node3 -> node4;
  node37 [label="While Statement"];
  node38 [label="Condition"];
  node37 -> node38;
  node39 [label="Binary Op: <"];
  node40 [label="Variable: result"];
  node39 -> node40;
  node41 [label="Float: 100.00"];
  node39 -> node41;
  node38 -> node39;
  node42 [label="Body"];
  node37 -> node42;
  node43 [label="Assignment: result"];
  node44 [label="Binary Op: +"];
  node45 [label="Variable: result"];
  node44 -> node45;
  node46 [label="Float: 10.50"];
  node44 -> node46;
  node43 -> node44;
  node42 -> node43;
  node3 -> node37;
  node2 -> node3;
  node47 [label="Function Call: printf"];
  node47 -> node48;
  node48 [label="Variable: \"Final result: %f\\n\""];
  node47 -> node49;
  node49 [label="Variable: result"];
  node2 -> node47;
  node1 -> node2;
  node50 [label="Return Statement"];
  node51 [label="Integer: 0"];
  node50 -> node51;
  node1 -> node50;
  node0 -> node1;
}
